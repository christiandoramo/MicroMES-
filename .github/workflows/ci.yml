name: CI with Docker Compose

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20            # sem cache aqui

      - name: Install Nx CLI globally
        run: pnpm add -g nx

      - name: Setup PNPM
        uses: pnpm/action-setup@v3
        with:
          version: 10                 # use a que quiser
          run_install: false          # só instala binário

      - name: Cache pnpm store        # cache manual
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-pnpm-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-pnpm-

      - name: Run docker-compose (Postgres + Kafka)
        run: docker compose up -d

      - name: Wait for Kafka and Postgres to be ready
        run: |
          echo "Esperando Kafka e Postgres..."
          sleep 20
          docker ps

      - name: Prisma generate
        run: pnpm --filter=auth exec prisma generate --schema=prisma/schema.prisma

      - name: Prisma migrate deploy
        run: pnpm --filter=auth exec prisma migrate deploy --schema=prisma/schema.prisma
        env:
          DATABASE_URL: postgres://postgres:postgres@localhost:5432/micromes_test

      # Unit Tests (granular)
      - name: Unit tests # deixar aberto para desenvolver com TDD
        run: |
          nx run auth:test
          nx run gateway:test

      # - name: E2E tests # deixar para quando tiver algum teste real para fazer
      #   run: |
      #     pnpm exec nx run auth-e2e:e2e
      #     pnpm exec nx run gateway-e2e:e2e
      #   env:
      #     DATABASE_URL: postgres://postgres:postgres@localhost:5432/micromes_test
